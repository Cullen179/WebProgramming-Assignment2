<!-- <h1>Update product information</h1>
<form method="POST" enctype="multipart/form-data">
  <label for="productname">name</label>
  <input
    type="text"
    name="productname"
    id="productname"
    value="<%=product.name%>"
  />
  <br />
  <br />

  <label for="productprice">price</label>
  <input
    type="text"
    name="productprice"
    id="productprice"
    value="<%=product.price%>"
  />
  <br />
  <br />

  <label for="productquantity">quantity</label>
  <input
    type="number"
    name="productquantity"
    id="productquantity"
    value="<%=product.quantity%>"
  />
  <br />
  <br />

  <label for="productdescription">description</label>
  <input
    type="text"
    name="productdescription"
    id="productdescription"
    value="<%=product.description%>"
  />
  <br />
  <br />

  <label for="productpicture">Current picture</label>
  <img src="<%=product.imgSrc%>" alt="Product picture" />
  <br />
  <br />

  <label for="productpicture">Change picture</label>
  <input type="file" id="productpicture" name="productpicture" />
  <br />
  <br />

  <button type="submit" formaction="/product/<%=product.id%>?_method=DELETE">DELETE</button>
  <button type="submit" formaction="/product/<%=product.id%>/edit?_method=PUT">Update</button>
</form> -->


<%- include ("../partials/head.ejs") %>

<body>
    <%- include ("../partials/vendor-header.ejs") %>
    <!-- Main content -->
    <main class="row w-100 m-0 indent d-flex flex-md-row flex-column align-items-md-start justify-content-md-between mt-5">
        <!-- Mini vertical nav -->
        <section class="vertical-nav col-lg-2 col-md-12 nav mb-lg-0 mb-5 flex-column bg-white d-flex flex-column justify-content-center shadow">
            <a class="nav-link text-black py-3 mw-100 d-flex justify-content-start" href="/">
                <span class="material-symbols-outlined">
                    home
                </span>
                <div class="ms-2"><strong>Dashboard</strong></div>
            </a>
            <a class="nav-link text-black py-3 mw-100 d-flex justify-content-start" href="/">
                <span class="material-symbols-outlined">
                    format_list_bulleted
                </span>
                <div class="ms-2"><strong>Products</strong></div>
            </a>
        </section>
        <!-- Mini vertical nav -->
        <!-- Add product form -->
        <section class="add-product-form col-lg-9 col-md-12 bg-white mb-5 p-lg-4 p-md-4 p-3 d-flex flex-column justify-content-center rounded-4 shadow">
            <h1><strong>Edit product detail</strong></h1>
            <form action="/product/<%= product.id %>/edit?_method=PUT" method="POST" enctype="multipart/form-data">
                <div class="product-image bg-white mb-md-4 mt-3">
                    <label for="product-image" class="form-label" style="display: block;"><p>Product images</p></label>
                    <img src="<%= product.imgSrc %>" alt="Product image" style="height: 300px; width: 300px; object-fit: contain;">
                    <div>*Upload new image (not required)</div>
                    <input class="form-control form-control-sm" name="productpicture" id="product-image" type="file" required>
                    <div class="field-error d-none">*At least 1 image of product must be selected</div>
                </div> 
                <div class="product-name mb-md-4 mt-3">
                    <label for="product-name" class="form-label"><p>Product name</p></label>
                    <input type="text" class="custom-form-input form-control" name="productname" id="product-name" value="<%= product.name %>" required>
                    <div class="field-error d-none">*Product's name must greater than or equal 10 characters and less than or equal 20 characters</div>
                </div>
                <div class="product-price mb-md-4 mt-3">
                    <label for="product-price" class="form-label"><p>Product price</p></label>
                    <input type="number" class="custom-form-input form-control" name="productprice" id="product-price" value="<%= product.price %>" required>
                    <div class="field-error d-none">*Product's price must be a positive number</div>
                </div>
                <div class="product-quantity mb-md-4 mt-3">
                    <label for="product-quantity" class="form-label"><p>Product quantity</p></label>
                    <input type="number" class="custom-form-input form-control" name="productquantity" id="product-quantity" value="<%= product.quantity %>" required>
                    <div class="field-error d-none">*Product's quantity must be a non negative integer</div>
                </div>
                <div class="product-description mb-md-4 mt-3">
                    <label for="product-description" class="form-label"><p>Product description</p></label>
                    <textarea class="form-control" name="productdescription" id="product-description" rows="6" required><%= product.description %></textarea>
                    <div class="field-error d-none">*Product's description must be at least 1 character and at most 500 characters</div>
                </div>
            </form>
            <button id="submit-btn" type="button" class="custom-form-button mt-md-0 mt-3 align-self-end">Save</button>
        </section>
        <!-- Add product form -->
    </main>
    <!-- Main content -->
    <%- include ('../partials/footer.ejs') %>

    <script>
        function isPositiveFloat(s) {
            return !isNaN(s) && Number(s) > 0;
        }

        // Handle data validation
        const form = document.querySelector('form');

        const submitBtn = document.querySelector('#submit-btn');

        const inputs = document.querySelectorAll('input');
        const imageInput = document.querySelector('.product-image input');
        const nameInput = document.querySelector('.product-name input');
        const priceInput = document.querySelector('.product-price input');
        const quantityInput = document.querySelector('.product-quantity input');
        const descriptionTextArea = document.querySelector('.product-description textarea');

        const errorDivs = document.querySelectorAll('.field-error');
        const nameError = document.querySelector('.product-name .field-error');
        const priceError = document.querySelector('.product-price .field-error');
        const quantityError = document.querySelector('.product-quantity .field-error');
        const descriptionError = document.querySelector('.product-description .field-error');
        
        // Handle validtion when submit button is clicked
        submitBtn.addEventListener('click', () => {
            errorDivs.forEach(errorDiv => {
                errorDiv.classList.add('d-none');
            })

            const name = nameInput.value.trim();
            const price = priceInput.value.trim();
            const quantity = quantityInput.value.trim();
            const description = descriptionTextArea.value.trim();
            
            let isValid = true;
            if (!(10 <= name.length && name.length <= 20)) { // Product's name length from 10 -> 20 after trim
                nameError.classList.remove('d-none');
                isValid = false;
            } else {
                nameError.classList.add('d-none');
            }
            
            if (!isPositiveFloat(price)) { // Product price must be a positive float
                priceError.classList.remove('d-none');
                isValid = false;
            } else {
                priceError.classList.add('d-none');
            }

            if (!quantity.match(/^\d+$/)) { // Quantity is non negative whole number: 0, 1, 2, 3
                quantityError.classList.remove('d-none');
                isValid = false;
            } else {
                quantityError.classList.add('d-none');
            }

            if (!(1 <= description.length && description.length <= 500)) { // Product's name length from 1 -> 500 after trim
                descriptionError.classList.remove('d-none');
                isValid = false;
            } else {
                descriptionError.classList.add('d-none');
            }

            if (isValid) {
                form.submit();
            }
        })

        // Handle input on change
        inputs.forEach(input => {
            input.addEventListener('input', () => {
                const inputId = input.id;
                const error = document.querySelector(`#${inputId} + .field-error`);
                error.classList.add('d-none');
            })
        })
        descriptionTextArea.addEventListener('input', () => {
            const error = document.querySelector('.product-description .field-error');
            error.classList.add('d-none');
        })
    </script>
    
    <style>
        .field-error {
            color: red;
            font-size: 12px;
            margin-top: 6px;
        }
    </style>
</body>
</html>